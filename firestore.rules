rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated.
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is requesting their own data.
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Public collections: anyone can read these.
    match /silverLevelPackages/{docId} {
      allow read: if true;
      allow write: if false; // Only admins should write via backend functions.
    }
    match /distributorTiers/{docId} {
      allow read: if true;
      allow write: if false; // Only admins should write via backend functions.
    }
    match /commissionTiers/{docId} {
      allow read: if true;
      allow write: if false; // Only admins should write via backend functions.
    }

    // Live transactions: Anyone can read these to populate the public feed.
    match /transactionProofs/{docId} {
        allow read: if true;
        allow create: if isAuthenticated(); // A user can create their own deposit proof
        allow update, delete: if false; // Only admins can update/delete
    }
    match /withdrawalRequests/{docId} {
        allow read: if true;
        allow create: if isAuthenticated(); // A user can create their own withdrawal request
        allow update, delete: if false; // Only admins can update/delete
    }

    // User-specific data: Only the owner can access their own documents.
    match /users/{userId} {
      allow read: if isOwner(userId);
      // Allow creation during sign-up.
      allow create: if isAuthenticated();
      // Allow profile updates.
      allow update: if isOwner(userId);
    }

    match /userStats/{userId} {
      allow read, write: if isOwner(userId);
      // Allow creation during sign-up batch write.
      allow create: if isAuthenticated();
    }

    match /userPaymentDetails/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    match /earningsLog/{userId} {
        allow read, write: if isOwner(userId);
    }

    match /users/{userId}/investments/{investmentId} {
      allow read, create: if isOwner(userId);
      allow update, delete: if false; // Prevent users from altering investments.
    }

    // Referral sub-collection:
    // A user can read their own list of referrals.
    // A new user can write their ID to their referrer's list during signup.
    match /users/{referrerId}/referrals/{newUserId} {
      allow read: if isOwner(referrerId);
      allow create: if isAuthenticated() && request.auth.uid == newUserId;
    }
  }
}
