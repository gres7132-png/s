rules_version = '2';

// --- Admin Configuration ---
// This list MUST be kept in sync with the ADMIN_EMAILS array in src/hooks/use-auth.tsx
function getAdminEmails() {
  return ["gres7132@gmail.com"];
}

// --- Helper Functions ---
function isAuthenticated() {
  return request.auth != null;
}

function isOwner(userId) {
  return request.auth.uid == userId;
}

function isAdmin() {
  return isAuthenticated() && request.auth.token.email in getAdminEmails();
}

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- User Data (`users`) ---
    // Users can read and write their own profile data.
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      // Admins are covered by the wildcard rule at the bottom.
    }
    
    // --- User Investments Subcollection ---
    // Users can read and write their own investments.
    match /users/{userId}/investments/{docId} {
       allow read, write: if isOwner(userId);
    }
    
    // --- User Stats (`userStats`) ---
    // Users can read their own stats. Admins can update them.
    match /userStats/{userId} {
      allow read: if isOwner(userId);
      // Creation happens on signup. Updates are admin-only via backend flows.
      // The admin's ability to write is handled by the wildcard rule.
    }
    
    // --- User Payment Details (`userPaymentDetails`) ---
    // Users can read and write their own payment details.
    match /userPaymentDetails/{userId} {
       allow read, write: if isOwner(userId);
    }

    // --- Platform-wide Packages & Tiers (Read-Only for Users) ---
    // Any authenticated user can read the available packages and tiers.
    match /silverLevelPackages/{packageId} {
      allow read: if isAuthenticated();
    }
    match /contributorTiers/{tierId} {
      allow read: if isAuthenticated();
    }
    match /commissionTiers/{tierId} {
        allow read: if isAuthenticated();
    }

    // --- Transaction Proofs (Deposits) ---
    // Users can create proofs and read their own.
    match /transactionProofs/{proofId} {
        allow create: if isAuthenticated();
        allow read: if isOwner(request.resource.data.userId);
    }
    
    // --- Withdrawal Requests ---
    // Users can create requests and read their own.
    match /withdrawalRequests/{reqId} {
        allow create: if isAuthenticated();
        allow read: if isOwner(request.resource.data.userId);
    }

    // --- Contributor Applications ---
    // Users can create applications and read their own.
    match /contributorApplications/{appId} {
      allow create: if isAuthenticated();
      allow read: if isOwner(request.resource.data.userId);
    }

    // --- ADMIN SUPERUSER ACCESS (WILDCARD) ---
    // This rule grants administrators full read/write access to EVERY document
    // in the entire database. This is the master key for the admin panel.
    match /{path=**}/{document} {
      allow read, write: if isAdmin();
    }
  }
}
