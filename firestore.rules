
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper Functions ---
    function isAuthOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      // This email MUST be kept in sync with the one in your user-management.ts flow
      return request.auth.token.email == "gres7132@gmail.com";
    }

    // --- User Data ---
    match /users/{userId} {
      // CREATE: Allow when creating their own user record on signup, but only if email is unique.
      allow create: if request.auth != null && existsAfter(/databases/$(database)/documents/users/$(request.resource.data.email)) == false;
      
      // READ: Admins can read any user doc. Users can read their own.
      allow read: if isAdmin() || isAuthOwner(userId);
      
      // UPDATE: Users can update their own document. Admins can update any.
      // The `hasActiveInvestment` field is updated by the server-side investment flow.
      allow update: if isAdmin() || (isAuthOwner(userId) && (!('hasActiveInvestment' in request.resource.data) || request.resource.data.hasActiveInvestment == true));
      
      // DELETE: Generally, users should not be deleted.
      allow delete: if isAdmin();

      // --- Sub-collections ---
      match /investments/{investmentId} {
        // READ: Users can read their own investments. Admins can read any.
        allow read: if isAdmin() || isAuthOwner(userId);
        // CREATE: A user can create their own investment record.
        allow create: if isAuthOwner(userId);
        // UPDATE/DELETE: Only admins can modify or delete existing investments.
        allow update, delete: if isAdmin();
      }
    }
    
    // User Stats: Balance, Earnings, etc.
    match /userStats/{userId} {
      // READ/WRITE: Only the user or an admin can access stats.
      allow read, write: if isAdmin() || isAuthOwner(userId);
    }
    
    // User Payment Details
    match /userPaymentDetails/{userId} {
       // READ/WRITE: Only the user or an admin can access payment details.
      allow read, write: if isAdmin() || isAuthOwner(userId);
    }


    // --- Public Configuration Data (Readable by all authenticated users) ---
    match /silverLevelPackages/{packageId} {
      allow read: if request.auth != null;
      allow write: if isAdmin(); // Only admins can create/update/delete
    }

    match /commissionTiers/{tierId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /contributorTiers/{tierId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // --- Transaction & Application Collections (Write by user, Manage by Admin) ---
    match /{collection}/{docId} {
      // This rule covers: transactionProofs, withdrawalRequests, contributorApplications
      // READ: Only admins can read these lists.
      allow read: if isAdmin();
      // CREATE: Any authenticated user can create a new request/proof/application.
      allow create: if request.auth != null;
      // UPDATE: Only admins can change the status (e.g., to 'approved' or 'rejected').
      allow update: if isAdmin();
      // DELETE: Not generally allowed.
      allow delete: if false;
    }
  }
}
