rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper function to check for admin ---
    function isAdmin() {
      // This list MUST be kept in sync with the one in your backend code (e.g., user-management.ts)
      let ADMIN_EMAILS = ["gres7132@gmail.com"];
      return request.auth.token.email in ADMIN_EMAILS;
    }

    // --- All collections are locked by default ---
    // --- Allow reads on public data, and writes only for admins ---
    match /{document=**} {
      allow read, write: if false;
    }

    // --- USERS: Can read/write their own data. Admins can read/write any. ---
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }
    match /userStats/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }
    match /userPaymentDetails/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    // --- INVESTMENTS: Users can create/read their own. Admins can read/write any. ---
    match /users/{userId}/investments/{investmentId} {
      allow read, create: if request.auth.uid == userId;
      allow write: if isAdmin(); // Only admins can update/delete investments.
    }
    
    // --- PUBLIC DATA: Authenticated users can read. Admins can write. ---
    match /silverLevelPackages/{packageId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    match /contributorTiers/{tierId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    match /commissionTiers/{tierId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // --- TRANSACTION SUBMISSIONS: Users can create. Admins can read/write. ---
    match /transactionProofs/{proofId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, write: if isAdmin();
    }
     match /withdrawalRequests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, write: if isAdmin();
    }
     match /contributorApplications/{applicationId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, write: if isAdmin();
    }
  }
}
