
rules_version = '2';

// Helper function to check if a user is a designated administrator
function isAdmin() {
  // IMPORTANT: Keep this list of emails in sync with your frontend `useAuth.tsx` and backend `admin-actions.ts` configuration.
  let ADMIN_EMAILS = ["gres7132@gmail.com"];
  return request.auth != null && request.auth.token.email_verified && ADMIN_EMAILS.includes(request.auth.token.email);
}

// Helper function to check if the user is the owner of the document
function isOwner(userId) {
  return request.auth != null && request.auth.uid == userId;
}

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ===== Public Collections =====
    // Anyone can read investment packages and tiers, but only admins can write.
    match /silverLevelPackages/{packageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /contributorTiers/{tierId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /commissionTiers/{tierId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // ===== User-Specific Data =====
    // Users can create and manage their own profile and payment details.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null;
      allow update: if isOwner(userId) || isAdmin();
      
      // Investments are a subcollection of a user.
      match /investments/{investmentId} {
        allow read, create: if isOwner(userId);
        allow update, delete: if isAdmin(); // Only admins can modify/delete existing investments
      }
    }

    match /userPaymentDetails/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // ===== Transaction and Admin Actions =====
    
    // Users can create their own transaction proofs (deposit requests).
    // Admins can read all and update status.
    match /transactionProofs/{proofId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, update: if isAdmin();
    }
    
    // Users can create their own withdrawal requests.
    // Admins can read all and update status.
    match /withdrawalRequests/{reqId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, update: if isAdmin();
    }
    
    // Only admins can read or write to any user's stats document.
    // This is critical for securing financial operations like updating balances.
    match /userStats/{userId} {
       allow read, write: if isAdmin();
       // A user can read their own stats, but cannot write to them directly.
       allow get: if isOwner(userId);
    }

    // Contributor applications can be created by users, but only read/updated by admins.
    match /contributorApplications/{appId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, update: if isAdmin();
    }
  }
}
