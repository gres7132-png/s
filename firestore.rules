rules_version = '2';

// --- Admin Configuration ---
// This list MUST be kept in sync with the ADMIN_EMAILS array in src/hooks/use-auth.tsx
function getAdminEmails() {
  return ["gres7132@gmail.com"];
}

// --- Helper Functions ---
function isAuthenticated() {
  return request.auth != null;
}

function isOwner(userId) {
  return request.auth.uid == userId;
}

function isAdmin() {
  return isAuthenticated() && request.auth.token.email in getAdminEmails();
}

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- User-Specific Data ---
    // Users can manage their own data. Admins have universal access to all user data.
    match /users/{userId}/{documents=**} {
      allow read, write: if isOwner(userId) || isAdmin();
    }
    
    // --- User Stats, Payment Details, and Profiles ---
    // These collections follow the same pattern: users manage their own, admins manage all.
    match /userStats/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }
    match /userPaymentDetails/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }
    match /users/{userId} {
      // Admins can delete user documents, users cannot.
      allow read, create, update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // --- Platform-Wide Configuration (Admin Writable) ---
    // Any authenticated user can read these, but only admins can modify them.
    match /silverLevelPackages/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    match /contributorTiers/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    match /commissionTiers/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // --- Transaction Requests (Deposits & Withdrawals) ---
    // Any authenticated user can create a request. Admins can read/update/delete all of them.
    // Users can read their own transaction history.
    match /transactionProofs/{proofId} {
      allow create: if isAuthenticated();
      allow read, update, delete: if isAdmin() || (isOwner(request.resource.data.userId));
    }
    match /withdrawalRequests/{reqId} {
      allow create: if isAuthenticated();
      allow read, update, delete: if isAdmin() || (isOwner(request.resource.data.userId));
    }
     match /contributorApplications/{appId} {
        allow create: if isAuthenticated();
        allow read, update, delete: if isAdmin() || (isOwner(request.resource.data.userId));
    }
  }
}